import React, { useRef, useEffect } from 'react';
import { ChatMessage as Message } from '@un360/core';
import { ChatMessage } from './ChatMessage';
import { SuggestedQuestions } from './SuggestedQuestions';
import { TypingIndicator } from './TypingIndicator';

interface ChatMessagesProps {
  messages: Message[];
  isBotTyping: boolean;
  greetingMessage: string;
  suggestedQuestions: any[];
  onQuestionClick: (question: string) => void;
  theme: any;
}

export const ChatMessages: React.FC<ChatMessagesProps> = ({
  messages,
  isBotTyping,
  greetingMessage,
  suggestedQuestions,
  onQuestionClick,
  theme,
}) => {
  const messagesEndRef = useRef<HTMLDivElement>(null);

  useEffect(() => {
    messagesEndRef.current?.scrollIntoView({ behavior: 'smooth' });
  }, [messages]);

  return (
    <div
      style={{
        flex: 1,
        overflowY: 'auto',
        padding: '16px',
        backgroundColor: theme.backgroundColor,
      }}
    >
      {messages.length === 0 && (
        <div style={{ textAlign: 'center', color: '#999', padding: '20px', fontStyle: 'italic' }}>
          {greetingMessage}
        </div>
      )}

      {messages.length === 0 && (
        <SuggestedQuestions questions={suggestedQuestions} onClick={onQuestionClick} />
      )}

      {messages.map((msg, idx) => (
        <ChatMessage key={idx} message={msg} theme={theme} />
      ))}

      {isBotTyping && <TypingIndicator />}

      <div ref={messagesEndRef} />
    </div>
  );
};