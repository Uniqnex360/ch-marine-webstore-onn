'use strict';

var core = require('@un360/core');
var ui = require('@un360/ui');
var jsxRuntime = require('react/jsx-runtime');
var react = require('react');

const ChatContext = react.createContext(undefined);
const ChatProvider = ({ apiKey, productId, apiBaseUrl, children, }) => {
    const chatData = core.useChat({ apiKey, productId, apiBaseUrl });
    const value = {
        ...chatData,
        apiKey,
        productId,
    };
    return jsxRuntime.jsx(ChatContext.Provider, { value: value, children: children });
};
const useChatContext = () => {
    const context = react.useContext(ChatContext);
    if (!context) {
        throw new Error('useChatContext must be used within ChatProvider');
    }
    return context;
};

Object.defineProperty(exports, 'ChatbotAPI', {
    enumerable: true,
    get: function () { return core.ChatbotAPI; }
});
Object.defineProperty(exports, 'formatTimestamp', {
    enumerable: true,
    get: function () { return core.formatTimestamp; }
});
Object.defineProperty(exports, 'useChat', {
    enumerable: true,
    get: function () { return core.useChat; }
});
Object.defineProperty(exports, 'validateConfig', {
    enumerable: true,
    get: function () { return core.validateConfig; }
});
Object.defineProperty(exports, 'ChatHeader', {
    enumerable: true,
    get: function () { return ui.ChatHeader; }
});
Object.defineProperty(exports, 'ChatInput', {
    enumerable: true,
    get: function () { return ui.ChatInput; }
});
Object.defineProperty(exports, 'ChatMessageComponent', {
    enumerable: true,
    get: function () { return ui.ChatMessage; }
});
Object.defineProperty(exports, 'ChatMessages', {
    enumerable: true,
    get: function () { return ui.ChatMessages; }
});
Object.defineProperty(exports, 'ChatWidget', {
    enumerable: true,
    get: function () { return ui.ChatWidget; }
});
Object.defineProperty(exports, 'FloatingButton', {
    enumerable: true,
    get: function () { return ui.FloatingButton; }
});
Object.defineProperty(exports, 'SuggestedQuestions', {
    enumerable: true,
    get: function () { return ui.SuggestedQuestions; }
});
Object.defineProperty(exports, 'TypingIndicator', {
    enumerable: true,
    get: function () { return ui.TypingIndicator; }
});
Object.defineProperty(exports, 'useChatUI', {
    enumerable: true,
    get: function () { return ui.useChatUI; }
});
Object.defineProperty(exports, 'useClickOutside', {
    enumerable: true,
    get: function () { return ui.useClickOutside; }
});
exports.ChatProvider = ChatProvider;
exports.useChatContext = useChatContext;
//# sourceMappingURL=index.js.map
