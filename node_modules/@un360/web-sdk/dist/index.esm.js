import { useChat } from '@un360/core';
export { ChatbotAPI, formatTimestamp, useChat, validateConfig } from '@un360/core';
export { ChatHeader, ChatInput, ChatMessage as ChatMessageComponent, ChatMessages, ChatWidget, FloatingButton, SuggestedQuestions, TypingIndicator, useChatUI, useClickOutside } from '@un360/ui';
import { jsx } from 'react/jsx-runtime';
import { createContext, useContext } from 'react';

const ChatContext = createContext(undefined);
const ChatProvider = ({ apiKey, productId, apiBaseUrl, children, }) => {
    const chatData = useChat({ apiKey, productId, apiBaseUrl });
    const value = {
        ...chatData,
        apiKey,
        productId,
    };
    return jsx(ChatContext.Provider, { value: value, children: children });
};
const useChatContext = () => {
    const context = useContext(ChatContext);
    if (!context) {
        throw new Error('useChatContext must be used within ChatProvider');
    }
    return context;
};

export { ChatProvider, useChatContext };
//# sourceMappingURL=index.esm.js.map
